2022-04-12
--------------------------

웹 어플리케이션 
------------------------
브라우저에서 동작하는 프로그램
브라우저에서 브라우저로 이동하는 프로그램 : 이동할 때 웹 문서 사용 : html 

웹 문서에서 또다른 웹 문서 
웹 문서에서 같은 웹 문서로 이동 


웹 페이지를 이동하는 기술 
----------------------------
test_forward_1하고 3을 중점적으로 공부하고
2,4는 지식적으로 가지고 있자.

getAttribute : setAttribute로 데이터를 넘길 때.(cf)싱글액션을 사용할 때 편함. '@@객체를 옮길 수 있음, 주로 ArrayList'
getParameter : 여러가지 네임을 가지고 오기 위해서 라던가 할 때
					
				cf)	<jsp:forword page="보낼페이지"/>
					<jsp:param name="param_1" value="<%=mid %>"
				cf2)pageContext.forward("/kos_jsp/test_forward_2_d.jsp?mid="+mid_pageContext);
					같이 ?key=value&key=value ... 로 올 때.



섹시하게 데이터를 옮기는 12가지 방법


20220417추가
========================================================================================================
20220417추가
@@@선행@@@
1.  앞으로 POST 방식으로 데이터 이동 시 이거 치기. (문자인코딩)<%request.setCharacterEncoding("UTF-8");%>


2. include이든 forward 방식이든 싱글로 보내냐, 더블로 보내느냐는 취향차이 
	
	2_1.싱글 태그로 보내고 싶을 때 = <jsp : param ~ >을 안 쓴다 
	<%
	-데이터가 적을 때 : requset.setAttribute(객체변수명,객체)(-줄 때) / request.getAttribute(객체변수명,객체)(-받을 때)
	-데이터가 많을 때 : RequestDispatcher.forward(request, response); 클래스 
			(보통 ArrayList<제네릭>을 선언하고  RequestDispatcher 담으면 내가 원하는 정보 여러개를 담을 수 있겠지요 
			 + 어차피 ORCL은 데이터가 전부 VARCHAR2니까 연동 시킬 때  편하겠지요)
	%>
	<jsp:include path="컨텍스트를 제외한 파일의경로" />
	
	2_2.더블 태그로 보내고 싶을 때 = <jsp : param ~ >을 쓴다 
	<%
	선언된 변수들
	%>
	<jsp:include path="컨텍스트를 제외한 파일의경로">
		<jsp:param name="넘길 변수명" value="<%=선언된변수명%>">
	</jsp:include>
	

3. 번외 
	쿼리 스트링으로 보낼 때
	3.1 pageContext.forward("컨텍스트를 제외한 파일의경로" + "?"+"key=value&key=value....") //? 격자, key=value, & 격자
	========================================================================================================



HTML <a> 앵커 태그 -글쎄
------------------------------------------
1.	<a href=""
	<a> : HTML a  태그 


자바스크립트 객체 사용 - 
------------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
2.	location.href=""
	location : 자바스크립트 객체 
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

3.	history.go(-1)
	history : 자바스크립트 객체 


form 태그에서 자바스크립트 submit 함수 
------------------------------------------
4.	<form action=""
	<input type="submit"
	submit : 자바스크립트 함수 
	이벤트 처리 : 자바스크립트, jQuery 


include : 정적 , 동적 
------------------------------------------
5.	<%@ include file="파일명" />
	-> 정적인 인클루드 : 데이터 넘길 생각 하지 말자

6.	<jsp:include path="컨텍스트를 제외한 파일의경로" />
	-> setAttribute로 넘겨야 함(적을 때). 아님 rD나(많을 때). 취향 차이.

7.	<jsp:include path="컨텍스트를 제외한 파일의경로">
		<jsp:param name="" value="">
	</jsp:include>
	-> 여러개 일 때 매우 편함.

forward : 이동할 페이지 url 이 보이지 않는다.*이동해도 URL이 그대로야 
------------------------------------------
8.	RequestDispatcher rd = request.getRequestDispatcher("컨텍스트를 제외한 파일의경로");
	rd.forward(request, response);
		RequestDispatcher 인터페이스는 Context 안에서만 이동하는 객체이다.
	
9.	pageContext.forward("컨텍스트를 제외한 파일의경로")
	->GET을 통한 키앤밸류 쓸 때 컨텍스트 제외 파일경로에 ?키=벨류&키=벨류... 식으로 쓰기 편함

10.	<jsp:forward path="컨텍스트를 제외한 파일의경로" />

11.	<jsp:forward path="컨텍스트를 제외한 파일의경로">
		<jsp:param name="" value="">
	</jsp:forward>


forward : 이동할 페이지 url 이 보인다. <====== 뭐임 이거???
------------------------------------------
12.	response.sendRedirect("URL");
	1). 요청한 페이지를 보여주고 
	2). 응답할 페이지로 이동을 하기 전에 
	3). 요청한 페이지의 url 끊고 
	4). 응답할 페이지를 새로 요청을 한다.
	5). 응답 페이지를 받는다. 

























